version: '3.3'
services:
  grafana-enterprise:
    container_name: grafana
    restart: always
    depends_on:
      - renderer
      - reporter
    networks:
          - docker-net
    ports:
      - '3000:3000'
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
      # GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      # GF_AUTH_GENERIC_OAUTH_SCOPES: openid email profile
      # GF_AUTH_GENERIC_OAUTH_NAME: Keycloak
      # GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: "true"
      # GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      # GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      #GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: qpzHr3ufRk7jeeTrOpsykAqd6Z2mAuuP
      #GF_AUTH_GENERIC_OAUTH_AUTH_URL: "http://172.17.0.1:8080/realms/master/protocol/openid-connect/auth"
      #GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://172.17.0.1:8080/realms/master/protocol/openid-connect/token"
      #GF_AUTH_GENERIC_OAUTH_API_URL: "http://172.17.0.1:8080/realms/master/protocol/openid-connect/userinfo"
      #GF_AUTH_SIGNOUT_REDIRECT_URL: "http://172.17.0.1:8080/realms/master/protocol/openid-connect/logout"
      # GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: zEiPb4RvUOljfQqf43kwI7WRbslFlP6z
      # GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://keycloakpg.clientsolve.com/realms/Besmart/protocol/openid-connect/auth"
      # GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://keycloakpg.clientsolve.com/realms/Besmart/protocol/openid-connect/token"
      # GF_AUTH_GENERIC_OAUTH_API_URL: "https://keycloakpg.clientsolve.com/realms/Besmart/protocol/openid-connect/userinfo"
      # GF_AUTH_SIGNOUT_REDIRECT_URL: "https://keycloakpg.clientsolve.com/realms/Besmart/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.clientsolve.com%2Flogin"
      # GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'"
      # GF_SERVER_DOMAIN: grafana.clientsolve.com
      # GF_SERVER_ROOT_URL: https://grafana.clientsolve.com
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://10.24.7.8:3000/
      GF_DEFAULT_FORCE_MIGRATION: "true"
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - 'vol_grafana:/var/lib/grafana'
    image: grafana/grafana-enterprise:latest
    #image: grafana/grafana-enterprise:8.5.3

  renderer:
    container_name: grafana-renderer
    image: grafana/grafana-image-renderer:latest
    expose:
    - 8081
    networks:
          - docker-net
    restart: always
  reporter:
    container_name: grafana-reporter
    image: izakmarais/grafana-reporter 
    ports:
     - '8094:8686'
    networks:
          - docker-net
    entrypoint:
      - /usr/local/bin/grafana-reporter
      - -ip=10.24.7.8
      - -proto=http://
      #- -cmd_apiKey="eyJrIjoiVVY0UFRBVHFGVVZPNnhsZnRyZHJTRHE1b2R6N094UHQiLCJuIjoidGVzdCIsImlkIjoxfQ=="
    restart: always


networks:
    docker-net:
        external: 
            name: docker-net 

volumes:
  vol_grafana:
    external: true 


#docker-compose -f Grafana.DockerCompose.yml up -d
#DOCKER_HOST="ssh://root@149.28.133.89" docker-compose -f GrafanaRenderer.DockerCompose.yml up -d 